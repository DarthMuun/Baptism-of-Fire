package main;

import java.awt.Color;
import java.awt.Font;

import java.awt.Graphics2D;
import java.awt.image.BufferedImage;

import object.OBJ_Key;

public class UI {

	GamePanel gp;
	Font stepalange_40;
	BufferedImage keyImage;
	public boolean messageOn = false;
	public String message = " ";
	int messageCounter = 0;
	
	public UI(GamePanel gp) {
		
		this.gp = gp;
		
		stepalange_40 = new Font ("Stepalange", Font.PLAIN, 40);
		OBJ_Key key = new OBJ_Key();
		keyImage = key.image;
		
	}
	
	public void showMessage (String text) {
		
		message = text;
		messageOn = true;
		
	}
	
	public void draw(Graphics2D g2) {
	    g2.setFont(stepalange_40);
	    g2.setColor(Color.white);
	    g2.drawImage(keyImage, gp.tileSize / 2, gp.tileSize / 2, gp.tileSize, gp.tileSize, null);
	    g2.drawString(" x " + gp.player.hasKey, 88, 80);

	    // Messages
	    if (messageOn) {
	        g2.setFont(g2.getFont().deriveFont(25F));

	        // Calcular la opacidad basada en el contador de mensajes
	        float opacity = 1.0f - Math.min(1.0f, (float) messageCounter / 240f); // 60 frames para desvanecerse

	        // Configurar el color del mensaje con opacidad
	        Color messageColor = new Color(1f, 1f, 1f, opacity);
	        g2.setColor(messageColor);

	        // Dibujar el mensaje con opacidad
	        g2.drawString(message, gp.tileSize / 2, gp.tileSize * 6);

	        // Incrementar el contador de mensajes
	        messageCounter++;

	        // Si el contador supera 120 (aproximadamente 2 segundos), restablecer y desactivar el mensaje
	        if (messageCounter > 120) {
	            messageCounter = 0;
	            messageOn = false;
	        }
	    }
	}
	
}
