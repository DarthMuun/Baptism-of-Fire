package main;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import net.java.games.input.Component;
import net.java.games.input.Controller; // Importa la clase Controller

public class KeyHandler implements KeyListener {

    public boolean upPressed, downPressed, leftPressed, rightPressed;

    private Controller gamepad;

    public KeyHandler() {
        configureGamepad();
    }

    @Override
    public void keyTyped(KeyEvent e) {
        // Método keyTyped
    }

    @Override
    public void keyPressed(KeyEvent e) {
        int code = e.getKeyCode();

        if (code == KeyEvent.VK_W) {
            upPressed = true;
        }

        if (code == KeyEvent.VK_S) {
            downPressed = true;
        }

        if (code == KeyEvent.VK_A) {
            leftPressed = true;
        }

        if (code == KeyEvent.VK_D) {
            rightPressed = true;
        }
    }

    @Override
    public void keyReleased(KeyEvent e) {
        int code = e.getKeyCode();

        if (code == KeyEvent.VK_W) {
            upPressed = false;
        }

        if (code == KeyEvent.VK_S) {
            downPressed = false;
        }

        if (code == KeyEvent.VK_A) {
            leftPressed = false;
        }

        if (code == KeyEvent.VK_D) {
            rightPressed = false;
        }
    }

    public void updateGamepadState() {
        if (gamepad != null && gamepad.poll()) {
            Component[] components = gamepad.getComponents();
            for (Component component : components) {
                if (component.isAnalog()) {
                    // Aquí puedes manejar la entrada analógica (joysticks)
                    // Por ejemplo: component.getIdentifier() y component.getPollData()
                } else {
                    // Aquí puedes manejar la entrada digital (botones)
                    // Por ejemplo: component.getIdentifier() y component.getPollData()
                }
            }
        }
    }

    private void configureGamepad() {
        Controller[] controllers = net.java.games.input.ControllerEnvironment.getDefaultEnvironment().getControllers();

        for (Controller controller : controllers) {
            if (controller.getType() == Controller.Type.GAMEPAD) {
                gamepad = controller;
                break;
            }
        }
    }
}