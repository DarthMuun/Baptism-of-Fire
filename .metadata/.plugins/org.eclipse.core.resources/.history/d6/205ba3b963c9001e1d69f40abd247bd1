package main;

import java.awt.Color;
import java.awt.Font;

import java.awt.Graphics2D;
import java.awt.image.BufferedImage;

import object.OBJ_Key;

public class UI {

	GamePanel gp;
	Font Stepalange_40,Stepalange_80;
	BufferedImage keyImage;
	public boolean messageOn = false;
	public String message = " ";
	int messageCounter = 0;
	public boolean gameFinished;
	
	double playTime;
	
	public UI(GamePanel gp) {
		
		this.gp = gp;
		
		Stepalange_40 = new Font ("Stepalange.otf", Font.PLAIN, 40);
		Stepalange_80 = new Font ("Stepalange.otf", Font.PLAIN, 80);
		OBJ_Key key = new OBJ_Key();
		keyImage = key.image;
		
	}
	
	public void showMessage (String text) {
		
		message = text;
		messageOn = true;
		
	}
	
	public void draw(Graphics2D g2) {
		
		if(gameFinished == true) {
			
		    g2.setFont(Stepalange_40);
		    g2.setColor(Color.white);
		    
		    String text;
		    int textLength;
		    int x;
		    int y;
		    
		    text = "Has encontrado la salida";
		    textLength = (int)g2.getFontMetrics().getStringBounds(text, g2).getWidth();
		    
		    x = gp.screenWidth/2 - textLength/2;
		    y = gp.screenHeight/2 - (gp.tileSize)*3;
		    g2.drawString(text, x, y);
		    
		    g2.setFont(Stepalange_80);
		    g2.setColor(Color.yellow);
		    text = "Bienvenido al Infierno";
		    textLength = (int)g2.getFontMetrics().getStringBounds(text, g2).getWidth();
		    
		    x = gp.screenWidth/2 - textLength/2;
		    y = gp.screenHeight/2 + (gp.tileSize)*2;
		    g2.drawString(text, x, y);
		    
		    gp.gameThread = null;
		    
		}else {
			
		    g2.setFont(Stepalange_40);
		    g2.setColor(Color.white);
		    g2.drawImage(keyImage, gp.tileSize / 2, gp.tileSize / 2, gp.tileSize, gp.tileSize, null);
		    g2.drawString(" x " + gp.player.hasKey, 88, 80);
		    
		    //Timer
		    playTime +=(double)1/60;
		    g2.drawString("Tiempo Actual: "+playTime, gp.tileSize*10, 600);
		    
		    // Messages
		    if (messageOn) {
		        g2.setFont(g2.getFont().deriveFont(25F));

		        // Calcular la opacidad basada en el contador de mensajes
		        float opacity = 1.0f - Math.min(1.0f, (float) messageCounter / 240f); // 60 frames para desvanecerse

		        // Configurar el color del mensaje con opacidad
		        Color messageColor = new Color(1f, 1f, 1f, opacity);
		        g2.setColor(messageColor);

		        // Dibujar el mensaje con opacidad
		        g2.drawString(message, gp.tileSize / 2, gp.tileSize * 6);

		        // Incrementar el contador de mensajes
		        messageCounter++;

		        // Si el contador supera 120 (aproximadamente 2 segundos), restablecer y desactivar el mensaje
		        if (messageCounter > 240) {
		            messageCounter = 0;
		            messageOn = false;
		        }
		    }
			
		}
		
	}
	
}
